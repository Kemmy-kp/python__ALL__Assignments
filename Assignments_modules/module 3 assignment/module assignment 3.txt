                                                           module 3

1)What is List? How will you reverse a list?
======>the .reverse() method in Python is a built-in method that reverses the list in place.

-->Reversing the list in place means that the method modifies and changes the original list. It doesn't create a new list which is a copy of the original but with the list items in reverse order.

syntx: list_name.reverse()

my_numbers = [1, 2, 3, 4, 5]

my_numbers.reverse()

print(my_numbers)

o/p:
[5, 4, 3, 2, 1]
============================================================
2)How will you remove last object from a list?
Suppose list1 is [2, 33, 222, 14, and 25], what is list1 [-1]?

list1 = [2, 33, 222, 14, 25]
removed_element = list1.pop()
print("Removed element:", removed_element)
print("Updated list:", list1)

o/p:
Removed element: 25
Updated list: [2, 33, 222, 14]
==============================================================
3)Differentiate between append () and extend () methods?

1. append() method:

-->The append() method is used to add a single element to the end of a list.
-->It takes one argument, which is the element you want to add.3
-->the element is added as a single item, even if it's a list or any other iterable.

Example:

my_list = [1, 2, 3]
my_list.append(4)
print(my_list)  # Output: [1, 2, 3, 4]

2. extend() method:

-->The extend() method is used to add multiple elements to the end of a list.
-->It takes an iterable (like a list, tuple, or any other sequence) as an argument and adds its elements to the original list.
-->It effectively appends all the elements from the iterable to the end of the list.

Example:


my_list = [1, 2, 3]
my_list.extend([4, 5, 6])
print(my_list)  # Output: [1, 2, 3, 4, 5, 6]
========================================================
4)Write a Python function to get the largest number, smallest num and sum 
of all from a list.
==========================================================
5)How will you compare two lists?

The cmp() function
The set() function and == operator
The sort() function and == operator
The collection.counter() function
The reduce() and map() function

Method 1: Using list.sort() and == operator sort() coupled with == operator can achieve this task. We first sort the list, so that if both the lists are identical,
then they have elements at the same position. But this doesnâ€™t take into account the ordering of elements in list.

Method 2: Using collections.Counter() Using Counter(), we usually are able to get the frequency of each element in a list, checking for it, for both lists,
we can check if two lists are identical or not. But this method also ignores the ordering of the elements in the list and only takes into account the frequency of elements.
===============================================================================
6)Write a Python program to count the number of strings where the string 
length is 2 or more and the first and last character are same from a given 
list of strings.
 
s=0
list1=['aabbaa','121','pqr','abc','112211']
for i in list1:
    if len(i)>1 and i[0]==i[-1]:
        print("the given words are:",i)
        s=s+1
print("num of words you wants:",s)

o/p:
the given words are: aabbaa
the given words are: 121
the given words are: 112211
num of words you wants: 3
==========================================================
7)Write a Python program to remove duplicates from a list.
===========================================================
20)Write a Python program to create a tuple with numbers.

my_tuple = ()
print(my_tuple)

my_tuple = (1, 2, 3)
print(my_tuple)


my_tuple = (1, "Hello", 3.4)
print(my_tuple)


my_tuple = ("world", [8, 4, 6], (1, 2, 3))
print(my_tuple)

o/p:
()
(1, 2, 3)
(1, 'Hello', 3.4)
('world', [8, 4, 6], (1, 2, 3))
==============================================================
21)Write a Python program to convert a tuple to a string.

t1=('p','r','o','g','r','a','m','m','i','n','g')
str=''.join(t1)
print(str)


o/p:
programming
===========================================================
22)Write a Python program to check whether an element exists within a 
tuple. 

t1=(7,8,"hello",67,"str")
index=t1.index("hello")
print(index)
#index value count  in program

o/p: 2
======================================================
23)Write a Python program to find the length of a tuple.

t1="programming"
print(len(t1))

o/p:  11
=================================================
24)Write a Python program to convert a list to a tuple.


list1=[1,2,3,4,5,6,7]
print(list1)
t1=tuple(list1)
print(t1)


o/p:
[1, 2, 3, 4, 5, 6, 7]
(1, 2, 3, 4, 5, 6, 7)
================================================
25)Write a Python program to reverse a tuple.

x=(1,2,3,4,5)
t1=reversed(x)
print(tuple(t1))

o/p:
(5, 4, 3, 2, 1)
============================================
26)Write a Python program to replace last value of tuples in a list.

list=[(10,20,30),(40,50,60),(70,80,90)]
print([t1[:-1]+(100,)for t1 in list])


o/p:
[(10, 20, 100), (40, 50, 100), (70, 80, 100)]
========================================================
27)Write a Python program to find the repeated items of a tuple. 

t1=1,2,3,5,1,6,1
print(t1)
count=t1.count(1)
print(count)

o/p:
(1, 2, 3, 5, 1, 6, 1)
3
======================================================
28)Write a Python program to remove an empty tuple(s) from a list of tuples. 

list1=[(),(""),('a','b'),('a','b','c'),('d')]
list1=[i for i in list1 if i]
print(list1)
#empty value not define

o/p:
[('a', 'b'), ('a', 'b', 'c'), 'd']
========================================================
29)Write a Python program to unzip a list of tuples into individual lists.















